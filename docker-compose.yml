version: '3.8'

services:
  mariadb:
    image: mariadb:10.11
    container_name: student_profile_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword123
      MYSQL_DATABASE: student_profile_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password123
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./src/database/schemas:/docker-entrypoint-initdb.d
    networks:
      - student_profile_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: student_profile_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - student_profile_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: student_profile_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_NAME=student_profile_db
      - DB_USER=app_user
      - DB_PASSWORD=app_password123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SESSION_SECRET=your-super-secret-session-key-change-in-production
      - JWT_SECRET=your-jwt-secret-change-in-production
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - student_profile_network
    command: npm run dev

  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: student_profile_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - student_profile_network
    command: npm start

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local

networks:
  student_profile_network:
    driver: bridge